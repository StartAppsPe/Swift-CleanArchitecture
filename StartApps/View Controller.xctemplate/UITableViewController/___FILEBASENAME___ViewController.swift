//
//  ___FILENAME___
//  ___PROJECTNAME___
//
//  Created by ___FULLUSERNAME___ on ___DATE___.
//  Copyright (c) ___YEAR___ ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the StartApps CleanSwift Xcode Templates. V2.0
//  By Gabriel Lanata (http://StartApps.pe) with credit to http://clean-swift.com
//

import UIKit

class ___VARIABLE_sceneName___ViewController: UIViewController, UITableViewDataSource, UITableViewDelegate {

    var interactor: ___VARIABLE_sceneName___Interactor!
    var router: ___VARIABLE_sceneName___Router!

    // MARK: - Object variables

    // NOTE: Only store objects here if required
    private var displayedSomethings: [___VARIABLE_sceneName___Scene.___VARIABLE_useCase___.ViewModel.DisplayedSomething] = []

    // MARK: - Inteface objects

    @IBOutlet private weak var tableView: UITableView!
    // @IBOutlet private weak var somethingLabel: UILabel!

    // MARK: - View lifecycle

    override func viewDidLoad() {
        super.viewDidLoad()
        setupView()
        do___VARIABLE_useCase___()
    }

    func setupView() {
        // NOTE: Setup the view on load
        // somethingLabel.textColor = UIColor.blue
    }

    // MARK: - Interaction handling

    // @IBAction func buttonPressed() { ...

    // MARK: - Event handling

    func do___VARIABLE_useCase___() {
        // NOTE: Ask the Interactor to do some work
        interactor.do___VARIABLE_useCase___(request: ___VARIABLE_sceneName___Scene.___VARIABLE_useCase___.Request())
    }

    // MARK: - Display logic

    func display___VARIABLE_useCase___(viewModel: ___VARIABLE_sceneName___Scene.___VARIABLE_useCase___.ViewModel) {
        // NOTE: Display the result from the Presenter
        // displayedSomething = viewModel.displayedSomething
        // tableView.reloadData()
    }

    // MARK: - TableView DataSource Methods

    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return displayedSomething.count
    }

    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let displayedSomething = displayedSomethings[indexPath.row]
        let cell = tableView.dequeueReusableCell(withIdentifier: ___VARIABLE_sceneName___TableViewCell.identifier, for: indexPath) as! ___VARIABLE_sceneName___TableViewCell
        // cell.titleLabel.text = displayedSomething.title
        return cell
    }

    // MARK: - TableView Delegate Methods

    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        tableView.deselectRow(at: indexPath, animated: true)
    }

}
