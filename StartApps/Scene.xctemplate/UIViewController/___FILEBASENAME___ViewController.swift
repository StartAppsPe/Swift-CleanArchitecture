//
//  ___FILENAME___
//  ___PROJECTNAME___
//
//  Created by ___FULLUSERNAME___ on ___DATE___.
//  Copyright (c) ___YEAR___ ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the StartApps CleanSwift Xcode Templates. V2.0
//  By Gabriel Lanata (http://StartApps.pe) with credit to http://clean-swift.com
//

import UIKit

class ___VARIABLE_sceneName___ViewController: UIViewController {

    var interactor: ___VARIABLE_sceneName___Interactor!
    var router: ___VARIABLE_sceneName___Router!

    // MARK: - Object variables

    // NOTE: Only store objects here if required
    // private var displayedSomethings: [___VARIABLE_useCase___]?

    // MARK: - Inteface objects

    // @IBOutlet private weak var somethingLabel: UILabel!

    // MARK: - View lifecycle

    override func viewDidLoad() {
        super.viewDidLoad()
        setupView()
        do___VARIABLE_useCase___()
    }

    func setupView() {
        // NOTE: Setup the view on load
        // somethingLabel.textColor = UIColor.blue
    }

    // MARK: - Interaction handling

    // @IBAction func buttonPressed() { ...

    // MARK: - Event handling

    func do___VARIABLE_useCase___() {
        // NOTE: Ask the Interactor to do some work
        // NOTE: Start loading animation here
        interactor.do___VARIABLE_useCase___(request: ___VARIABLE_sceneName___Scene.___VARIABLE_useCase___.Request())
    }

    // MARK: - Display logic
    
    func display___VARIABLE_useCase___(viewModel: ___VARIABLE_sceneName___Scene.___VARIABLE_useCase___.ViewModel) {
        // NOTE: Stop loading animation here
        // NOTE: Display the result from the Presenter
        // somethingLabel.text = viewModel.name
    }
    
    func displayAlertError(viewModel: ___VARIABLE_sceneName___Scene.AlertError.ViewModel) {
        // NOTE: Stop loading animation here
        let alert = UIAlertController(title: "Error", message: viewModel.message, preferredStyle: .alert)
        alert.addAction(UIAlertAction(title: "OK", style: .cancel, handler: nil))
        present(alert, animated: true, completion: nil)
    }

}
